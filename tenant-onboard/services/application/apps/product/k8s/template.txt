apiVersion: apps/v1
kind: Deployment
metadata:
  name: product
spec:
  replicas: 1
  selector:
    matchLabels:
      app: product
  template:
    metadata:
      labels:
        app: product
    spec:
#      nodeSelector: #karpenters
#        saas-boost: eks-boost      
      containers:
        - name: product
          image: PRODUCT_SERVICE_ECR_REPO:latest
          imagePullPolicy: Always
          resources:
            limits:
              memory: "500Mi"
              cpu: "0.5"
            requests:
              memory: "500Mi"
              cpu: "0.5"
          ports:
            - containerPort: 3005
              name: "http"
          env:
            - name: AWS_REGION
              value: "INSERT_AWS_REGION"
            - name: IAM_ROLE_ARN
              value: "INSERT_IAM_ROLE_ARN"
            - name: COGNITO_USER_POOL_ID
              value: "INSERT_COGNITO_USER_POOL_ID"
            - name: COGNITO_CLIENT_ID
              value: "INSERT_COGNITO_CLIENT_ID"
            - name: COGNITO_REGION
              value: "INSERT_COGNITO_REGION"
            - name: PRODUCT_TABLE_NAME
              value: "INSERT_PRODUCT_TABLE_NAME"
            - name: TENANT_NAME
              value: "TENANT_PATH"  
---
apiVersion: v1
kind: Service
metadata:
  name: product-service
spec:
  selector:
    app: product
  ports:
    - name: http
      protocol: TCP
      port: 80
      targetPort: 3005
  type: NodePort
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: product-service-ingress
  annotations:
    kubernetes.io/ingress.class: nginx
    alb.ingress.kubernetes.io/scheme: internet-facing
spec:
  rules:
    - host: ELB_URL
      http:
        paths:
          - backend:
              service:
                name: product-service
                port:
                  number: 80
            path: /TENANT_PATH/api/products
            pathType: Prefix
